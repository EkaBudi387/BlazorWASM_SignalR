@page "/editRecord/{No}"

@using Microsoft.AspNetCore.SignalR.Client
@using BlazorWASM_SignalR.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Edit Record</h2>
<hr />

<style>
        .select-box {
            width: 640px;
        }

            .select-box select {
                height: 38px;
                padding: 10px 15px;
                line-height: 18px;
                font-size: 15px;
                width: 100%;
                border: 1px solid #ccc;
                border-radius: 4px;
                -webkit-appearance: none;
            }

            .select-box:after {
                content: "";
                position: absolute;
            }
    </style>

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="DateIn" class="control-label">DateIn</label>
                <input for="DateIn" class="form-control" @bind="@record.IDT_00" />
            </div>
            <div class="form-group">
                <label for="SA_SN" class="control-label">SA_SN</label>
                <input for="SA_SN" class="form-control" @bind="@record.SA_SN" />
            </div>
            <div class="form-group">
                <label for="Detail Defect" class="control-label">Detail Defect</label>
                &nbsp;
                <button type="submit"
                        class="btn btn-primary btn-rounded btn-sm my-0"
                        @onclick="UpdateListDetDefect">
                    Edit List
                </button>
            </div>
        </div>
    </div>
    @if (list_FA_DetDefects == null)
    {

    }
    else
    {
        <div class="select-box">
            <select @bind="@record.DetDefect">
                <option></option>
                @foreach (var _ in list_FA_DetDefects)
                {
                    <option>@_.FA_DetDefect</option>
                }
            </select>
        </div>
    
    }
    <br />
    <div class="row">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@UpdateRecord" value="Update" />
            <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
        </div>
    </div>
</form>


@code {

    [Parameter]
    public string No { get; set; }

    InfoFASA record = new InfoFASA();

    List_FA_DetDefect[] list_FA_DetDefects;

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        list_FA_DetDefects = await Http.GetFromJsonAsync<List_FA_DetDefect[]>("api/List_FA_DetDefect");

        record = await Http.GetFromJsonAsync<InfoFASA>("api/InfoFASAs/" + No);

        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/RecordHub"))
        .Build();

        await hubConnection.StartAsync();

    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;


    protected async Task UpdateRecord()
    {
        await Http.PutAsJsonAsync("api/InfoFASAs/" + No, record);
        if (IsConnected) await SendMessage();
        NavigationManager.NavigateTo("listRecord");

    }


    Task SendMessage() => hubConnection.SendAsync("SendMessage");


    void Cancel()
    {
        NavigationManager.NavigateTo("listRecord");

    }

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

    void UpdateListDetDefect()
    {
        NavigationManager.NavigateTo("editListDetDefect");
    }

}