@page "/baking"

@using BlazorWASM_SignalR.Shared


@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Baking Record</h3>
<hr/>

<form onsubmit="return false">
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label class="control-label">SN</label>
                <input class="form-control" @onkeypress="KeyboardEventHandler" @bind-value="@theValue" @bind-value:event="oninput" />
            </div>
        </div>
    </div>
</form>

<div class="card-body">

    <div id="table" class="table-editable">
        <span class="table-add float-right mb-3 mr-2">
            <a href="#!" class="text-success">
                <i class="fas fa-plus fa-2x" aria-hidden="true"></i>
            </a>
        </span>

        <table class="table table-bordered table-responsive-md table-striped text-center">
            <thead>
                <tr>
                    <th>DateIn</th>
                    <th>SN</th>
                    <th>PN</th>
                    <th>Lastest Reject</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var _ in sharedBakingRecords)
                {
                    <tr>
                        <td>@_.DateIn</td>
                        <td>@_.SN</td>
                        <td>@_.PN</td>
                        <td>@_.Last_Bin_Code</td>
                        <td>
                            <span class="table-remove">
                                <button type="submit"
                                        class="btn btn-danger btn-rounded btn-sm my-0"
                                        @onclick="() => DeleteSN(_.SN)"
                                        >
                                    Remove
                                </button>
                            </span>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
</div>

<button type="submit"
        class="btn btn-success btn-rounded btn-sm my-0"
        @onclick="Submit"
        >
    Submit
</button>

@code {

    SharedModelMySqlPNA[] PNAmodelList;

    List<SharedBakingRecord> sharedBakingRecords = new List<SharedBakingRecord>();

    string theValue;

    protected override async Task OnInitializedAsync()
    {

        PNAmodelList = await Http.GetFromJsonAsync<SharedModelMySqlPNA[]>("api/MySqlPNA/PNAModelList");

    }

    protected void KeyboardEventHandler(KeyboardEventArgs args)
    {
        SharedBakingRecord bakingList = new SharedBakingRecord();

        if (args.Key == "Enter")
        {

            bakingList.DateIn = DateTime.Now;

            foreach (var _ in PNAmodelList)
            {
                if (theValue == _.SN)
                {
                    bakingList.PN = _.PN;
                    bakingList.Last_Bin_Code = _.Remark;
                    bakingList.SN = theValue;

                    break;
                }
            }

            sharedBakingRecords.Add(bakingList);

            theValue = "";
        }

        else
        {

        }

    }

    public void DeleteSN(string SN)
    {

        sharedBakingRecords.RemoveAll(p => p.SN == SN);

    }

    protected async Task Submit()
    {
        foreach(var _ in sharedBakingRecords)
        {
            await Http.PostAsJsonAsync("api/SharedBakingRecords", _);
        }
    }
}