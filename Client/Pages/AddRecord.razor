@page "/addRecord"

@using Microsoft.AspNetCore.SignalR.Client
@using BlazorWASM_SignalR.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Create Record</h2>
<hr />

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="DateIn" class="control-label">DateIn</label>
                <input for="DateIn" class="form-control" @bind="@record.DateIn" />
            </div>
            <div class="form-group">
                <label for="SA_SN" class="control-label">SA_SN</label>
                <input for="SA_SN" class="form-control" @bind="@record.SA_SN" />
            </div>
            <div class="form-group">
                <label for="SA_PN" class="control-label">SA_PN</label>
                <label for="SA_PN" class="control-label">SA_PN</label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateRecord" value="Save" />
                <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>



@code {

    RecordDetails record = new RecordDetails();

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/RecordHub"))
        .Build();

        await hubConnection.StartAsync();

    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;


    protected async Task CreateRecord()
    {
        await Http.PostAsJsonAsync("api/RecordDetails", record);
        if (IsConnected) await SendMessage();
        NavigationManager.NavigateTo("listRecord");

    }


    Task SendMessage() => hubConnection.SendAsync("SendMessage");


    void Cancel()
    {
        NavigationManager.NavigateTo("listRecord");

    }

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}